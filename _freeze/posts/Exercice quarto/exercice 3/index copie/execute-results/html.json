{
  "hash": "62525c23569286fa40b73396b8bba35b",
  "result": {
    "markdown": "---\ntitle: \"Exercice antérieure\"\nauthor: \"Rodolphe MOCAER\"\ndate: \"2024-03-02\"\ncategories: [news]\n---\n\n\n# Exercice 1\n \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(geosphere)\nlibrary(tidygeocoder)\nlibrary(leaflet)\n```\n:::\n\n\n##Question 1 :\n\n\n::: {.cell}\n\n:::\n\n\n##Question 2 :\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_ex = read.csv2(\"/Users/rododo/Desktop/ECAP/R avancé/paris-2024-sites-olympiques-et-paralympiques-franciliens.csv\")\ndata_ex = data.frame(data_ex)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(data_ex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"geo_point\"                      \"nom\"                           \n[3] \"sites_olympiques_paralympiques\" \"sports\"                        \n```\n:::\n\n```{.r .cell-code}\nstr(data_ex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t31 obs. of  4 variables:\n $ geo_point                     : chr  \"48.841319, 2.253076\" \"48.924388, 2.359871\" \"48.92467, 2.332428\" \"48.815115, 2.08208\" ...\n $ nom                           : chr  \"Parc des Princes\" \"Stade de France\" \"Village olympique\" \"Château de Versailles\" ...\n $ sites_olympiques_paralympiques: chr  \"Site olympique\" \"Site olympique,Site paralympique\" \"\" \"Site olympique,Site paralympique\" ...\n $ sports                        : chr  \"Football\" \"Athlétisme,Para athlétisme,Rugby\" \"\" \"Sports équestres,Para équitation,Pentathlon moderne\" ...\n```\n:::\n:::\n\n\nIl est possible de constater la présenvce de quatres colonnes désignées par les noms \"geo_point\", \"nom\", \"sites_olympiques_paralympiques\", et \"sport\". En outre, la première colonne renferme les coordonnées géographiques des sites (latitude, longitude), la seconde contient les noms des lieux, la troisième spécifie si le lieu accueille des épreuves olympiques, paralympiques, ou les deux, tandis que la dernière colonne correspond au sport pratiqué sur le site.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(data_ex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 31  4\n```\n:::\n:::\n\n\nNous pouvons voir que le data frame contient 31 lignes.\n\n##Question 3 :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphrases_a_rechercher <- c(\"Site olympique\")\nresultat_olymp <- data_ex[grep(paste(phrases_a_rechercher, collapse=\"|\"), data_ex$sites_olympiques_paralympiques), ]\nprint(nrow(resultat_olymp))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 26\n```\n:::\n\n```{.r .cell-code}\nprint(table(resultat_olymp$sites_olympiques_paralympiques))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n                  Site olympique Site olympique,Site paralympique \n                              10                               16 \n```\n:::\n:::\n\n\nIl est notable qu'il existe précisément 26 sites olympiques, dont 16 sont également désignés comme sites paralympiques.\n\n##Question 4 :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphrases_a_rechercher <- c(\"Site paralympique\")\nresultat_para <- data_ex[grep(paste(phrases_a_rechercher, collapse=\"|\"), data_ex$sites_olympiques_paralympiques), ]\nprint(nrow(resultat_para))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 19\n```\n:::\n\n```{.r .cell-code}\nprint(table(resultat_para$sites_olympiques_paralympiques))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nSite olympique,Site paralympique                Site paralympique \n                              16                                3 \n```\n:::\n:::\n\n\nIl est observé qu'il existe précisément 19 sites paralympiques, parmi lesquels 16 sont simultanément désignés comme sites olympiques.\n\n##Question 5 : \n\n\n::: {.cell}\n\n```{.r .cell-code}\nresultat_sport <- data_ex[grep(\",\", data_ex$sports), ]\nprint(nrow(resultat_sport))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 19\n```\n:::\n:::\n\n\nAu sein de l'ensemble des sites, on constate la présence de 19 installations qui accueillent diverses disciplines sportives. Ces 19 sites comprennent :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (nom in resultat_sport$nom) {\n  cat(\"- \", nom, \"\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n-  Stade de France \n-  Château de Versailles \n-  Grand Palais \n-  Invalides \n-  Pont d'Iéna \n-  Arena Bercy \n-  Arena Paris nord \n-  Arena Paris Sud 6 (Porte de Versailles) \n-  Stade de la Concorde \n-  Arena Champs de Mars \n-  Stade Tour Eiffel \n-  Arena La Chapelle \n-  Centre aquatique \n-  Arena Paris Sud 1 (Porte de Versailles) \n-  Arena Paris Sud 4 (Porte de Versailles) \n-  La Défense Arena \n-  Stade nautique \n-  Vélodrome National de Saint-Quentin-en-Yvelines \n-  Stade Roland Garros \n```\n:::\n:::\n\n\n##Question 6 : \n\n\n::: {.cell}\n\n```{.r .cell-code}\nphrases_a_rechercher <- c(\"Site paralympique\")\nresultat_para_filtre <- resultat_sport[grep(paste(phrases_a_rechercher, collapse=\"|\"), resultat_sport$sites_olympiques_paralympiques), ]\nprint(table(resultat_para_filtre$sites_olympiques_paralympiques))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nSite olympique,Site paralympique \n                              16 \n```\n:::\n:::\n\n\nIl est à noter que seize sites, dédiés à plusieurs disciplines sportives, accueillent également au moins une discipline sportive paralympique.\n\n##Question 7 : \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_ex$nb_virgules <- sapply(strsplit(as.character(data_ex$sports), \",\"), function(x) length(x) - 1)\nmax_virgules <- max(data_ex$nb_virgules)\nlignes_max_virgules <- data_ex[data_ex$nb_virgules == max_virgules, ]\nprint(max_virgules)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n\n```{.r .cell-code}\nprint(nrow(lignes_max_virgules))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8\n```\n:::\n:::\n\n\nNous observons la présence de huit sites, chacun proposant un accueil sportif pour trois disciplines, ce nombre représentant le maximum pour les Jeux Olympiques de Paris. Ces sites étant :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (nom in lignes_max_virgules$nom) {\n  cat(\"- \", nom, \"\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n-  Grand Palais \n-  Invalides \n-  Arena Bercy \n-  Arena Paris nord \n-  Stade de la Concorde \n-  Arena Champs de Mars \n-  Arena La Chapelle \n-  Stade nautique \n```\n:::\n:::\n\n\n##Question 8 : \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_ex$nb_sports <- strsplit (as.character(data_ex$sports), \",\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndisciplines <- unique(unlist(data_ex$nb_sports))\nsites_disciplines <- numeric(length = length(disciplines))\n\nfor (i in seq_along(disciplines)) {\n  sites_disciplines[i] <- sum(sapply(data_ex$nb_sports, function(x) disciplines[i] %in% x))\n}\n\nmax_discipline_sites <- disciplines[which.max(sites_disciplines)]\nmax_sites_discipline <- data_ex[sapply(data_ex$nb_sports, function(x) max_discipline_sites %in% x),]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"La discipline\", max_discipline_sites, \"sera celle qui se déroulera sur le plus grand nombre de sites.\", \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLa discipline Athlétisme sera celle qui se déroulera sur le plus grand nombre de sites. \n```\n:::\n\n```{.r .cell-code}\ncat(\"Les sites associés à cette discipline sont :\\n\",\n    paste(\"- \", max_sites_discipline$nom, collapse = \"\\n\"), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLes sites associés à cette discipline sont :\n -  Stade de France\n-  Invalides\n-  Pont d'Iéna\n-  Hôtel de ville de Paris \n```\n:::\n:::\n\n\n##Question 9 : \n\nSéparation de la colonnes géo_point en 2 afin d'avoir les latitudes et longitudes séparer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeo_coords <- strsplit(as.character(data_ex$geo_point), \",\")\ndata_ex$geo_lat <- as.numeric(sapply(geo_coords, function(x) x[1]))\ndata_ex$geo_lon <- as.numeric(sapply(geo_coords, function(x) x[2]))\ndata_ex$geo_point <- NULL\n```\n:::\n\n\nPar conséquent, nous identifions les sites les plus proches à vol d'oiseau.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhaversine_distance <- function(lat1, lon1, lat2, lon2) {\n  distm(c(lon1, lat1), c(lon2, lat2), fun = distHaversine)\n}\nmin_distance <- Inf\nnom_site1 <- ''\nnom_site2 <- ''\nfor (i in 1:(nrow(data_ex) - 1)) {\n  for (j in (i + 1):nrow(data_ex)) {\n    distance <- haversine_distance(data_ex$geo_lat[i], data_ex$geo_lon[i], data_ex$geo_lat[j], data_ex$geo_lon[j])\n        if (distance < min_distance) {\n      min_distance <- distance\n      nom_site1 <- data_ex$nom[i]\n      nom_site2 <- data_ex$nom[j]\n    }\n  }\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"Les deux sites les plus proches sont :\", nom_site1, \"et\", nom_site2, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLes deux sites les plus proches sont : Stade BMX de Saint-Quentin-en-Yvelines et Vélodrome National de Saint-Quentin-en-Yvelines \n```\n:::\n:::\n\n\n## Question 10 :\n\nNous identifions les sites les plus éloignés à vol d'oiseau.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhaversine_distance <- function(lat1, lon1, lat2, lon2) {\n  distm(c(lon1, lat1), c(lon2, lat2), fun = distHaversine)\n}\nmax_distance <- 0\nnom_site1 <- ''\nnom_site2 <- ''\nfor (i in 1:(nrow(data_ex) - 1)) {\n  for (j in (i + 1):nrow(data_ex)) {\n    distance <- haversine_distance(data_ex$geo_lat[i], data_ex$geo_lon[i], data_ex$geo_lat[j], data_ex$geo_lon[j])\n        if (distance > max_distance) {\n      max_distance <- distance\n      nom_site1 <- data_ex$nom[i]\n      nom_site2 <- data_ex$nom[j]\n    }\n  }\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"Les deux sites les plus loins sont :\", nom_site1, \"et\", nom_site2, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLes deux sites les plus loins sont : Colline d'Elancourt et Stade nautique \n```\n:::\n:::\n\n\n## Question 11 :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbarycentre_lat <- sum(data_ex$geo_lat) / nrow(data_ex)\nbarycentre_lon <- sum(data_ex$geo_lon) / nrow(data_ex)\ncat(\"Les coordonnées du barycentre sont : (\", barycentre_lat, \",\", barycentre_lon, \")\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLes coordonnées du barycentre sont : ( 48.86684 , 2.29757 )\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- data.frame(lat = barycentre_lat, lon = barycentre_lon)\nresult <- tidygeocoder::reverse_geocode(coords, lat = \"lat\", lon = \"lon\", method = \"osm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nPassing 1 coordinate to the Nominatim single coordinate geocoder\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nQuery completed in: 1 seconds\n```\n:::\n\n```{.r .cell-code}\ncat(\"L'adresse correspondant aux coordonnées (\", coords$lat, \",\", coords$lon, \") est :\\n\", result$address, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nL'adresse correspondant aux coordonnées ( 48.86684 , 2.29757 ) est :\n 23, Avenue Pierre 1er de Serbie, Quartier de Chaillot, Paris 16e Arrondissement, Paris, Île-de-France, France métropolitaine, 75116, France \n```\n:::\n:::\n\n\nNous pouvons visualiser l'emplacement grâce à une carte :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nma_carte <- leaflet() %>%\n  addTiles() %>%\n  addMarkers(lng = barycentre_lon, lat = barycentre_lat, popup = \"Barycentre\")\nma_carte\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-2541d1b0613b5870d67d\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2541d1b0613b5870d67d\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org/copyright/\\\">OpenStreetMap<\\/a>,  <a href=\\\"https://opendatacommons.org/licenses/odbl/\\\">ODbL<\\/a>\"}]},{\"method\":\"addMarkers\",\"args\":[48.8668434516129,2.297569580645161,null,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":false,\"riseOffset\":250},\"Barycentre\",null,null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[48.8668434516129,48.8668434516129],\"lng\":[2.297569580645161,2.297569580645161]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"../../../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"../../../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"../../../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/leaflet-binding-2.2.1/leaflet.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}