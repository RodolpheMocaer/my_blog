[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Bienvenue sur mon Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/Exercice quarto/exercice 1/index copie.html",
    "href": "posts/Exercice quarto/exercice 1/index copie.html",
    "title": "Exercice antérieure",
    "section": "",
    "text": "library(geosphere)\nlibrary(tidygeocoder)\nlibrary(leaflet)\n\n##Question 1 :\n##Question 2 :\n\ndata_ex = read.csv2(\"/Users/rododo/Desktop/ECAP/R avancé/paris-2024-sites-olympiques-et-paralympiques-franciliens.csv\")\ndata_ex = data.frame(data_ex)\n\n\nnames(data_ex)\n\n[1] \"geo_point\"                      \"nom\"                           \n[3] \"sites_olympiques_paralympiques\" \"sports\"                        \n\nstr(data_ex)\n\n'data.frame':   31 obs. of  4 variables:\n $ geo_point                     : chr  \"48.841319, 2.253076\" \"48.924388, 2.359871\" \"48.92467, 2.332428\" \"48.815115, 2.08208\" ...\n $ nom                           : chr  \"Parc des Princes\" \"Stade de France\" \"Village olympique\" \"Château de Versailles\" ...\n $ sites_olympiques_paralympiques: chr  \"Site olympique\" \"Site olympique,Site paralympique\" \"\" \"Site olympique,Site paralympique\" ...\n $ sports                        : chr  \"Football\" \"Athlétisme,Para athlétisme,Rugby\" \"\" \"Sports équestres,Para équitation,Pentathlon moderne\" ...\n\n\nIl est possible de constater la présenvce de quatres colonnes désignées par les noms “geo_point”, “nom”, “sites_olympiques_paralympiques”, et “sport”. En outre, la première colonne renferme les coordonnées géographiques des sites (latitude, longitude), la seconde contient les noms des lieux, la troisième spécifie si le lieu accueille des épreuves olympiques, paralympiques, ou les deux, tandis que la dernière colonne correspond au sport pratiqué sur le site.\n\ndim(data_ex)\n\n[1] 31  4\n\n\nNous pouvons voir que le data frame contient 31 lignes.\n##Question 3 :\n\nphrases_a_rechercher &lt;- c(\"Site olympique\")\nresultat_olymp &lt;- data_ex[grep(paste(phrases_a_rechercher, collapse=\"|\"), data_ex$sites_olympiques_paralympiques), ]\nprint(nrow(resultat_olymp))\n\n[1] 26\n\nprint(table(resultat_olymp$sites_olympiques_paralympiques))\n\n\n                  Site olympique Site olympique,Site paralympique \n                              10                               16 \n\n\nIl est notable qu’il existe précisément 26 sites olympiques, dont 16 sont également désignés comme sites paralympiques.\n##Question 4 :\n\nphrases_a_rechercher &lt;- c(\"Site paralympique\")\nresultat_para &lt;- data_ex[grep(paste(phrases_a_rechercher, collapse=\"|\"), data_ex$sites_olympiques_paralympiques), ]\nprint(nrow(resultat_para))\n\n[1] 19\n\nprint(table(resultat_para$sites_olympiques_paralympiques))\n\n\nSite olympique,Site paralympique                Site paralympique \n                              16                                3 \n\n\nIl est observé qu’il existe précisément 19 sites paralympiques, parmi lesquels 16 sont simultanément désignés comme sites olympiques.\n##Question 5 :\n\nresultat_sport &lt;- data_ex[grep(\",\", data_ex$sports), ]\nprint(nrow(resultat_sport))\n\n[1] 19\n\n\nAu sein de l’ensemble des sites, on constate la présence de 19 installations qui accueillent diverses disciplines sportives. Ces 19 sites comprennent :\n\nfor (nom in resultat_sport$nom) {\n  cat(\"- \", nom, \"\\n\")\n}\n\n-  Stade de France \n-  Château de Versailles \n-  Grand Palais \n-  Invalides \n-  Pont d'Iéna \n-  Arena Bercy \n-  Arena Paris nord \n-  Arena Paris Sud 6 (Porte de Versailles) \n-  Stade de la Concorde \n-  Arena Champs de Mars \n-  Stade Tour Eiffel \n-  Arena La Chapelle \n-  Centre aquatique \n-  Arena Paris Sud 1 (Porte de Versailles) \n-  Arena Paris Sud 4 (Porte de Versailles) \n-  La Défense Arena \n-  Stade nautique \n-  Vélodrome National de Saint-Quentin-en-Yvelines \n-  Stade Roland Garros \n\n\n##Question 6 :\n\nphrases_a_rechercher &lt;- c(\"Site paralympique\")\nresultat_para_filtre &lt;- resultat_sport[grep(paste(phrases_a_rechercher, collapse=\"|\"), resultat_sport$sites_olympiques_paralympiques), ]\nprint(table(resultat_para_filtre$sites_olympiques_paralympiques))\n\n\nSite olympique,Site paralympique \n                              16 \n\n\nIl est à noter que seize sites, dédiés à plusieurs disciplines sportives, accueillent également au moins une discipline sportive paralympique.\n##Question 7 :\n\ndata_ex$nb_virgules &lt;- sapply(strsplit(as.character(data_ex$sports), \",\"), function(x) length(x) - 1)\nmax_virgules &lt;- max(data_ex$nb_virgules)\nlignes_max_virgules &lt;- data_ex[data_ex$nb_virgules == max_virgules, ]\nprint(max_virgules)\n\n[1] 3\n\nprint(nrow(lignes_max_virgules))\n\n[1] 8\n\n\nNous observons la présence de huit sites, chacun proposant un accueil sportif pour trois disciplines, ce nombre représentant le maximum pour les Jeux Olympiques de Paris. Ces sites étant :\n\nfor (nom in lignes_max_virgules$nom) {\n  cat(\"- \", nom, \"\\n\")\n}\n\n-  Grand Palais \n-  Invalides \n-  Arena Bercy \n-  Arena Paris nord \n-  Stade de la Concorde \n-  Arena Champs de Mars \n-  Arena La Chapelle \n-  Stade nautique \n\n\n##Question 8 :\n\ndata_ex$nb_sports &lt;- strsplit (as.character(data_ex$sports), \",\")\n\n\ndisciplines &lt;- unique(unlist(data_ex$nb_sports))\nsites_disciplines &lt;- numeric(length = length(disciplines))\n\nfor (i in seq_along(disciplines)) {\n  sites_disciplines[i] &lt;- sum(sapply(data_ex$nb_sports, function(x) disciplines[i] %in% x))\n}\n\nmax_discipline_sites &lt;- disciplines[which.max(sites_disciplines)]\nmax_sites_discipline &lt;- data_ex[sapply(data_ex$nb_sports, function(x) max_discipline_sites %in% x),]\n\n\ncat(\"La discipline\", max_discipline_sites, \"sera celle qui se déroulera sur le plus grand nombre de sites.\", \"\\n\")\n\nLa discipline Athlétisme sera celle qui se déroulera sur le plus grand nombre de sites. \n\ncat(\"Les sites associés à cette discipline sont :\\n\",\n    paste(\"- \", max_sites_discipline$nom, collapse = \"\\n\"), \"\\n\")\n\nLes sites associés à cette discipline sont :\n -  Stade de France\n-  Invalides\n-  Pont d'Iéna\n-  Hôtel de ville de Paris \n\n\n##Question 9 :\nSéparation de la colonnes géo_point en 2 afin d’avoir les latitudes et longitudes séparer.\n\ngeo_coords &lt;- strsplit(as.character(data_ex$geo_point), \",\")\ndata_ex$geo_lat &lt;- as.numeric(sapply(geo_coords, function(x) x[1]))\ndata_ex$geo_lon &lt;- as.numeric(sapply(geo_coords, function(x) x[2]))\ndata_ex$geo_point &lt;- NULL\n\nPar conséquent, nous identifions les sites les plus proches à vol d’oiseau.\n\nhaversine_distance &lt;- function(lat1, lon1, lat2, lon2) {\n  distm(c(lon1, lat1), c(lon2, lat2), fun = distHaversine)\n}\nmin_distance &lt;- Inf\nnom_site1 &lt;- ''\nnom_site2 &lt;- ''\nfor (i in 1:(nrow(data_ex) - 1)) {\n  for (j in (i + 1):nrow(data_ex)) {\n    distance &lt;- haversine_distance(data_ex$geo_lat[i], data_ex$geo_lon[i], data_ex$geo_lat[j], data_ex$geo_lon[j])\n        if (distance &lt; min_distance) {\n      min_distance &lt;- distance\n      nom_site1 &lt;- data_ex$nom[i]\n      nom_site2 &lt;- data_ex$nom[j]\n    }\n  }\n}\n\n\ncat(\"Les deux sites les plus proches sont :\", nom_site1, \"et\", nom_site2, \"\\n\")\n\nLes deux sites les plus proches sont : Stade BMX de Saint-Quentin-en-Yvelines et Vélodrome National de Saint-Quentin-en-Yvelines \n\n\n\n\nNous identifions les sites les plus éloignés à vol d’oiseau.\n\nhaversine_distance &lt;- function(lat1, lon1, lat2, lon2) {\n  distm(c(lon1, lat1), c(lon2, lat2), fun = distHaversine)\n}\nmax_distance &lt;- 0\nnom_site1 &lt;- ''\nnom_site2 &lt;- ''\nfor (i in 1:(nrow(data_ex) - 1)) {\n  for (j in (i + 1):nrow(data_ex)) {\n    distance &lt;- haversine_distance(data_ex$geo_lat[i], data_ex$geo_lon[i], data_ex$geo_lat[j], data_ex$geo_lon[j])\n        if (distance &gt; max_distance) {\n      max_distance &lt;- distance\n      nom_site1 &lt;- data_ex$nom[i]\n      nom_site2 &lt;- data_ex$nom[j]\n    }\n  }\n}\n\n\ncat(\"Les deux sites les plus loins sont :\", nom_site1, \"et\", nom_site2, \"\\n\")\n\nLes deux sites les plus loins sont : Colline d'Elancourt et Stade nautique \n\n\n\n\n\n\nbarycentre_lat &lt;- sum(data_ex$geo_lat) / nrow(data_ex)\nbarycentre_lon &lt;- sum(data_ex$geo_lon) / nrow(data_ex)\ncat(\"Les coordonnées du barycentre sont : (\", barycentre_lat, \",\", barycentre_lon, \")\\n\")\n\nLes coordonnées du barycentre sont : ( 48.86684 , 2.29757 )\n\n\n\ncoords &lt;- data.frame(lat = barycentre_lat, lon = barycentre_lon)\nresult &lt;- tidygeocoder::reverse_geocode(coords, lat = \"lat\", lon = \"lon\", method = \"osm\")\n\nPassing 1 coordinate to the Nominatim single coordinate geocoder\n\n\nQuery completed in: 1 seconds\n\ncat(\"L'adresse correspondant aux coordonnées (\", coords$lat, \",\", coords$lon, \") est :\\n\", result$address, \"\\n\")\n\nL'adresse correspondant aux coordonnées ( 48.86684 , 2.29757 ) est :\n 23, Avenue Pierre 1er de Serbie, Quartier de Chaillot, Paris 16e Arrondissement, Paris, Île-de-France, France métropolitaine, 75116, France \n\n\nNous pouvons visualiser l’emplacement grâce à une carte :\n\nma_carte &lt;- leaflet() %&gt;%\n  addTiles() %&gt;%\n  addMarkers(lng = barycentre_lon, lat = barycentre_lat, popup = \"Barycentre\")\nma_carte"
  },
  {
    "objectID": "posts/Exercice quarto/exercice 1/index copie.html#question-10",
    "href": "posts/Exercice quarto/exercice 1/index copie.html#question-10",
    "title": "Exercice antérieure",
    "section": "",
    "text": "Nous identifions les sites les plus éloignés à vol d’oiseau.\n\nhaversine_distance &lt;- function(lat1, lon1, lat2, lon2) {\n  distm(c(lon1, lat1), c(lon2, lat2), fun = distHaversine)\n}\nmax_distance &lt;- 0\nnom_site1 &lt;- ''\nnom_site2 &lt;- ''\nfor (i in 1:(nrow(data_ex) - 1)) {\n  for (j in (i + 1):nrow(data_ex)) {\n    distance &lt;- haversine_distance(data_ex$geo_lat[i], data_ex$geo_lon[i], data_ex$geo_lat[j], data_ex$geo_lon[j])\n        if (distance &gt; max_distance) {\n      max_distance &lt;- distance\n      nom_site1 &lt;- data_ex$nom[i]\n      nom_site2 &lt;- data_ex$nom[j]\n    }\n  }\n}\n\n\ncat(\"Les deux sites les plus loins sont :\", nom_site1, \"et\", nom_site2, \"\\n\")\n\nLes deux sites les plus loins sont : Colline d'Elancourt et Stade nautique"
  },
  {
    "objectID": "posts/Exercice quarto/exercice 1/index copie.html#question-11",
    "href": "posts/Exercice quarto/exercice 1/index copie.html#question-11",
    "title": "Exercice antérieure",
    "section": "",
    "text": "barycentre_lat &lt;- sum(data_ex$geo_lat) / nrow(data_ex)\nbarycentre_lon &lt;- sum(data_ex$geo_lon) / nrow(data_ex)\ncat(\"Les coordonnées du barycentre sont : (\", barycentre_lat, \",\", barycentre_lon, \")\\n\")\n\nLes coordonnées du barycentre sont : ( 48.86684 , 2.29757 )\n\n\n\ncoords &lt;- data.frame(lat = barycentre_lat, lon = barycentre_lon)\nresult &lt;- tidygeocoder::reverse_geocode(coords, lat = \"lat\", lon = \"lon\", method = \"osm\")\n\nPassing 1 coordinate to the Nominatim single coordinate geocoder\n\n\nQuery completed in: 1 seconds\n\ncat(\"L'adresse correspondant aux coordonnées (\", coords$lat, \",\", coords$lon, \") est :\\n\", result$address, \"\\n\")\n\nL'adresse correspondant aux coordonnées ( 48.86684 , 2.29757 ) est :\n 23, Avenue Pierre 1er de Serbie, Quartier de Chaillot, Paris 16e Arrondissement, Paris, Île-de-France, France métropolitaine, 75116, France \n\n\nNous pouvons visualiser l’emplacement grâce à une carte :\n\nma_carte &lt;- leaflet() %&gt;%\n  addTiles() %&gt;%\n  addMarkers(lng = barycentre_lon, lat = barycentre_lat, popup = \"Barycentre\")\nma_carte"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Visualisation météorologique",
    "section": "",
    "text": "La librairie olympicsWeather est un package R conçu pour fournir des fonctionnalités liées à l’analyse météorologique des Jeux olympiques. Elle offre des outils pour récupérer, explorer et analyser les données météorologiques associées aux différentes éditions des Jeux olympiques.\n\n\nPour installer le package olympicsWeather depuis GitHub, vous pouvez utiliser le package remotes. Exécutez les commandes suivantes dans la console R :\n\n# Installation du package remotes si ce n'est pas déjà fait\n#if (!requireNamespace(\"remotes\", quietly = #TRUE)) {\n#  install.packages(\"remotes\")\n#}\n\n# Installation du package olympicsWeather depuis GitHub\n#remotes::install_github(\"NomUtilisateur/olympicsWeather\")\n\n\nlibrary(olympicsWeather)\n\nWarning: replacing previous import 'devtools::test_file' by\n'testthat::test_file' when loading 'olympicsWeather'\n\n\nWarning: replacing previous import 'httr2::with_mock' by 'testthat::with_mock'\nwhen loading 'olympicsWeather'\n\n\nWarning: replacing previous import 'httr2::local_mock' by\n'testthat::local_mock' when loading 'olympicsWeather'\n\n\nNous pouvons grâce à notre packages visualiser les données météorologique pour le satde de france.\n\nmétéo &lt;- get_forecast(\"stade de france\")\n\nPassing 1 address to the ArcGIS single address geocoder\n\n\nQuery completed in: 0.9 seconds\n\nGraphique_pluie(météo)\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\n\n\nGraphique_temperature(météo)\n\n\n\n\nDe plus, nous pouvons également visualiser les données météorologique pour tahiti.\n\nmétéo_tahiti &lt;- get_forecast(\"tahiti\")\n\nPassing 1 address to the ArcGIS single address geocoder\n\n\nQuery completed in: 0.3 seconds\n\nGraphique_pluie(météo_tahiti)\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\n\n\nGraphique_temperature(météo_tahiti)\n\n\n\n\nEnfin, nous pouvons visualiser les données météorologique pour les points GPS suivant : . 43.276703, 5.334791.\n\nmétéo_gps &lt;- get_forecast(c(43.276703,5.334791))\nGraphique_pluie(météo_gps)\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\n\n\nGraphique_temperature(météo_gps)"
  },
  {
    "objectID": "posts/post-with-code/index.html#librairie-olympicsweather",
    "href": "posts/post-with-code/index.html#librairie-olympicsweather",
    "title": "Visualisation météorologique",
    "section": "",
    "text": "La librairie olympicsWeather est un package R conçu pour fournir des fonctionnalités liées à l’analyse météorologique des Jeux olympiques. Elle offre des outils pour récupérer, explorer et analyser les données météorologiques associées aux différentes éditions des Jeux olympiques.\n\n\nPour installer le package olympicsWeather depuis GitHub, vous pouvez utiliser le package remotes. Exécutez les commandes suivantes dans la console R :\n\n# Installation du package remotes si ce n'est pas déjà fait\n#if (!requireNamespace(\"remotes\", quietly = #TRUE)) {\n#  install.packages(\"remotes\")\n#}\n\n# Installation du package olympicsWeather depuis GitHub\n#remotes::install_github(\"NomUtilisateur/olympicsWeather\")\n\n\nlibrary(olympicsWeather)\n\nWarning: replacing previous import 'devtools::test_file' by\n'testthat::test_file' when loading 'olympicsWeather'\n\n\nWarning: replacing previous import 'httr2::with_mock' by 'testthat::with_mock'\nwhen loading 'olympicsWeather'\n\n\nWarning: replacing previous import 'httr2::local_mock' by\n'testthat::local_mock' when loading 'olympicsWeather'\n\n\nNous pouvons grâce à notre packages visualiser les données météorologique pour le satde de france.\n\nmétéo &lt;- get_forecast(\"stade de france\")\n\nPassing 1 address to the ArcGIS single address geocoder\n\n\nQuery completed in: 0.9 seconds\n\nGraphique_pluie(météo)\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\n\n\nGraphique_temperature(météo)\n\n\n\n\nDe plus, nous pouvons également visualiser les données météorologique pour tahiti.\n\nmétéo_tahiti &lt;- get_forecast(\"tahiti\")\n\nPassing 1 address to the ArcGIS single address geocoder\n\n\nQuery completed in: 0.3 seconds\n\nGraphique_pluie(météo_tahiti)\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\n\n\nGraphique_temperature(météo_tahiti)\n\n\n\n\nEnfin, nous pouvons visualiser les données météorologique pour les points GPS suivant : . 43.276703, 5.334791.\n\nmétéo_gps &lt;- get_forecast(c(43.276703,5.334791))\nGraphique_pluie(météo_gps)\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\n\n\nGraphique_temperature(météo_gps)"
  },
  {
    "objectID": "posts/Exercice quarto/exercice 2/index copie 2.html",
    "href": "posts/Exercice quarto/exercice 2/index copie 2.html",
    "title": "Exercice antérieure",
    "section": "",
    "text": "library(rvest)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ ggplot2   3.5.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()         masks stats::filter()\n✖ readr::guess_encoding() masks rvest::guess_encoding()\n✖ dplyr::lag()            masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(stringr)\n\n#Question 1 :\n\nlist_tables &lt;-\n  session(\"https://fr.wikipedia.org/wiki/Liste_des_m%C3%A9daill%C3%A9s_olympiques\") |&gt;\n  html_elements(\".wikitable\") |&gt;\n  html_table()\nlist_tables\n\n[[1]]\n# A tibble: 31 × 11\n   Discipline   Discipline   Années `Nombre de` `Nombre de` `médailles décernés`\n   &lt;chr&gt;        &lt;chr&gt;        &lt;chr&gt;  &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;               \n 1 \"Discipline\" Discipline   Années Éditions    Épreuves(e… Or                  \n 2 \"\"           Athlétisme   Depui… 29          48          1028                \n 3 \"\"           Aviron       Depui… 28          14          269                 \n 4 \"\"           Badminton    Depui… 8           5           39                  \n 5 \"\"           Basket-ball  Depui… 20          4           32                  \n 6 \"\"           Boxe         1904,… 26          13          266                 \n 7 \"\"           Canoë-kayak  Depui… 20          16          242                 \n 8 \"\"           Cyclisme(ho… Depui… 29          22          263                 \n 9 \"\"           Équitation   1900,… 26          6           151                 \n10 \"\"           Escrime      Depui… 29          12          223                 \n# ℹ 21 more rows\n# ℹ 5 more variables: `médailles décernés` &lt;chr&gt;, `médailles décernés` &lt;chr&gt;,\n#   `médailles décernés` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles d'or` &lt;chr&gt;\n\n[[2]]\n# A tibble: 16 × 11\n   Discipline   Discipline   Années `Nombre de` `Nombre de` `médailles décernés`\n   &lt;chr&gt;        &lt;chr&gt;        &lt;chr&gt;  &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;               \n 1 \"Discipline\" Discipline   Années Éditions    épreuves e… Or                  \n 2 \"\"           Biathlon     1924,… 16          11          54                  \n 3 \"\"           Bobsleigh    1924-… 21          3           39                  \n 4 \"\"           Combiné nor… Depui… 22          3           28                  \n 5 \"\"           Curling      1924,… 4           2           7                   \n 6 \"\"           Hockey sur … Été :… 23          2           24                  \n 7 \"\"           Luge         Depui… 14          4           37                  \n 8 \"\"           Patinage ar… Été :… 24          4           77                  \n 9 \"\"           Patinage de… Depui… 22          12          152                 \n10 \"\"           Patinage de… Depui… 7           8           32                  \n11 \"\"           Saut à ski   Depui… 22          4           38                  \n12 \"\"           Skeleton     1924,… 6           2           6                   \n13 \"\"           Ski acrobat… Depui… 7           10          18                  \n14 \"\"           Ski alpin    Depui… 19          10          132                 \n15 \"\"           Ski de fond  Depui… 22          12          134                 \n16 \"\"           Snowboard    Depui… 5           10          14                  \n# ℹ 5 more variables: `médailles décernés` &lt;chr&gt;, `médailles décernés` &lt;chr&gt;,\n#   `médailles décernés` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles d'or` &lt;chr&gt;\n\n[[3]]\n# A tibble: 14 × 8\n   Discipline   Discipline       Années `Nombre d'éditions` `Médailles décernés`\n   &lt;chr&gt;        &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;               &lt;chr&gt;               \n 1 \"Discipline\" Discipline       Années Nombre d'éditions   Or                  \n 2 \"\"           Baseball         1992–… 5                   5                   \n 3 \"\"           Pelote basque    1900   1                   1                   \n 4 \"\"           Cricket          1900   1                   1                   \n 5 \"\"           Croquet          1900   1                   3                   \n 6 \"\"           Jeu de paume     1908   1                   1                   \n 7 \"\"           Crosse           1904–… 2                   2                   \n 8 \"\"           Polo             1900,… 5                   5                   \n 9 \"\"           Jeu de raquettes 1908   1                   2                   \n10 \"\"           Roque            1904   1                   1                   \n11 \"\"           Rugby à XV       1900,… 4                   4                   \n12 \"\"           Softball         1996–… 4                   4                   \n13 \"\"           Tir à la corde   1900–… 5                   5                   \n14 \"\"           Motonautisme     1908   5                   3                   \n# ℹ 3 more variables: `Médailles décernés` &lt;chr&gt;, `Médailles décernés` &lt;chr&gt;,\n#   `Médailles décernés` &lt;chr&gt;\n\n[[4]]\n# A tibble: 2 × 8\n  Discipline   Discipline        Années `Nombre d'éditions` `Médailles décernés`\n  &lt;chr&gt;        &lt;chr&gt;             &lt;chr&gt;  &lt;chr&gt;               &lt;chr&gt;               \n1 \"Discipline\" Discipline        Années Nombre d'éditions   Or                  \n2 \"\"           Patrouille milit… 1924   1                   1                   \n# ℹ 3 more variables: `Médailles décernés` &lt;chr&gt;, `Médailles décernés` &lt;chr&gt;,\n#   `Médailles décernés` &lt;chr&gt;\n\n[[5]]\n# A tibble: 30 × 11\n   Jeux  Médaille  Médaille Hôte     Nombred'épreuves(ave…¹ `Médailles décernés`\n   &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;                  &lt;chr&gt;               \n 1 Jeux  Médaille  Médaille Hôte     Nombred'épreuves(avec… Or                  \n 2 1896  médaillés tableau  Athènes… 43                     43                  \n 3 1900  médaillés tableau  Paris, … 95                     90                  \n 4 1904  médaillés tableau  Saint-L… 91                     96                  \n 5 1908  médaillés tableau  Londres… 110                    110                 \n 6 1912  médaillés tableau  Stockho… 102                    103                 \n 7 1920  médaillés tableau  Anvers,… 154                    156                 \n 8 1924  médaillés tableau  Paris, … 126                    126                 \n 9 1928  médaillés tableau  Amsterd… 109                    111                 \n10 1932  médaillés tableau  Los Ang… 117                    116                 \n# ℹ 20 more rows\n# ℹ abbreviated name: ¹​`Nombred'épreuves(avec médailles)`\n# ℹ 5 more variables: `Médailles décernés` &lt;chr&gt;, `Médailles décernés` &lt;chr&gt;,\n#   `Médailles décernés` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles d'or` &lt;chr&gt;\n\n[[6]]\n# A tibble: 24 × 11\n   Jeux  Médaille  Médaille Hôte     Nombred'épreuves(ave…¹ `Médailles décernés`\n   &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;                  &lt;chr&gt;               \n 1 Jeux  Médaille  Médaille Hôte     Nombred'épreuves(avec… Or                  \n 2 1924  médaillés tableau  Chamoni… 16                     16                  \n 3 1928  médaillés tableau  Saint-M… 14                     14                  \n 4 1932  médaillés tableau  Lake Pl… 14                     14                  \n 5 1936  médaillés tableau  Garmisc… 17                     17                  \n 6 1948  médaillés tableau  Saint-M… 22                     22                  \n 7 1952  médaillés tableau  Oslo, N… 22                     22                  \n 8 1956  médaillés tableau  Cortina… 24                     25                  \n 9 1960  médaillés tableau  Squaw V… 27                     28                  \n10 1964  médaillés tableau  Innsbru… 34                     34                  \n# ℹ 14 more rows\n# ℹ abbreviated name: ¹​`Nombred'épreuves(avec médailles)`\n# ℹ 5 more variables: `Médailles décernés` &lt;chr&gt;, `Médailles décernés` &lt;chr&gt;,\n#   `Médailles décernés` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles d'or` &lt;chr&gt;\n\n\nCette instruction nous permet d’effectuer du web scraping sur la page Wikipedia “Liste des médaillés olympiques” afin d’extraire les données présentes sous forme de tableaux. Les informations obtenues sont stockées dans la variable “list_tables”, qui est une liste contenant six éléments, chacun représentant l’un des tableaux présents sur la page.\n#Question 2 :\n\ndata_medailles_sport_ete = list_tables[[1]]\ndata_medailles_sport_ete = data_medailles_sport_ete[-1,-1]\ncolnames(data_medailles_sport_ete) =  c(\"Discipline\", \"Annees\", \"Editions\", \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\", \"Athletes_medailles\", \"Athletes_or\")\ndata_medailles_sport_ete[, 3:8] &lt;- lapply(data_medailles_sport_ete[, 3:8], as.integer)\nstr(data_medailles_sport_ete)\n\ntibble [30 × 10] (S3: tbl_df/tbl/data.frame)\n $ Discipline        : chr [1:30] \"Athlétisme\" \"Aviron\" \"Badminton\" \"Basket-ball\" ...\n $ Annees            : chr [1:30] \"Depuis 1896\" \"Depuis 1900\" \"Depuis 1992\" \"Depuis 1936\" ...\n $ Editions          : int [1:30] 29 28 8 20 26 20 29 26 29 27 ...\n $ Epreuves_2020     : int [1:30] 48 14 5 4 13 16 22 6 12 2 ...\n $ Or                : int [1:30] 1028 269 39 32 266 242 263 151 223 34 ...\n $ Argent            : int [1:30] 1030 268 39 32 266 241 261 149 223 34 ...\n $ Bronze            : int [1:30] 1027 273 43 32 472 243 260 148 221 35 ...\n $ Total             : int [1:30] 3085 810 121 96 1004 726 784 448 667 103 ...\n $ Athletes_medailles: chr [1:30] \"Paavo Nurmi (FIN) (9-3-0)\" \"Elisabeta Lipă (ROU) (5-2-1)\" \"Gao Ling (CHN) (2-1-1)\" \"Teresa Edwards (USA) (4-0-1)\" ...\n $ Athletes_or       : chr [1:30] \"Paavo Nurmi (FIN) (9-3-0) Carl Lewis (USA) (9-1-0)\" \"Elisabeta Lipă (ROU) (5-2-1) Georgeta Damian (ROU) (5-0-1) Steven Redgrave (GBR) (5-0-1)\" \"Gao Ling (CHN) (2-1-1) Kim Dong-moon (KOR) (2-0-1) Zhang Nan (CHN) (2-0-1) Ge Fei (CHN) (2-0-0) Gu Jun (CHN) (2\"| __truncated__ \"Teresa Edwards (USA) (4-0-1) Sue Bird (USA) (4-0-0) Tamika Catchings (USA) (4-0-0) Lisa Leslie (USA) (4-0-0) Di\"| __truncated__ ...\n\n\n#Question 3 :\n\ndata_medailles_sport_ete &lt;- data_medailles_sport_ete |&gt; \n  arrange(desc(Total))\ntop_3 &lt;- data_medailles_sport_ete[1:3, ]\n\nLes trois disciplines qui possédent le plus de médailles sont :\n\nfor (Discipline in top_3$Discipline) {\n  cat(\"- \", Discipline, \"\\n\")\n}\n\n-  Athlétisme \n-  Natation(hommes, femmes) \n-  Lutte \n\n\n#Question 4 :\n\nselected_rows &lt;- data_medailles_sport_ete %&gt;%\n  filter(Epreuves_2020 == min(Epreuves_2020))\nselected_rows$Discipline\n\n[1] \"Pentathlon moderne\"    \"Hockey sur gazon\"      \"Football\"             \n[4] \"Volley-ball\"           \"Water polo\"            \"Handball\"             \n[7] \"Natation synchronisée\" \"Golf\"                 \n\n\n#Question 5 :\nPour valider les résultats de la colonne “éditions”, nous utilisons une fonction spécifique.\n\ncalcul_edition &lt;- function(annee) {\n  Calcul_edition &lt;- str_extract(annee, \"(?i)depuis\\\\s+(\\\\d{4})\") |&gt; \n    str_extract(\"\\\\d{4}\") |&gt; \n    as.integer()\n  \n  if (Calcul_edition &lt; 1896 || (Calcul_edition - 1896) %% 4 != 0) {\n    stop(\"Année invalide. L'année doit être 1896 ou ultérieure et un multiple de 4 après 1896.\")\n  }\n  \n  edition2 &lt;- (2024 - Calcul_edition) / 4 - ifelse(Calcul_edition &lt; 1916, 3, ifelse(Calcul_edition &lt; 1944, 2, 0))\n  \n  return(edition2)\n}\n\n\ncalcul_edition(\"depuis 1900\")\n\n[1] 28\n\n\nCependant, nous employons une autre méthode pour vérifier dans la base de données.\n\ncalcul_nb_editions_int &lt;- function(data) {\n  data &lt;- data |&gt; \n    mutate(\n      Calcul_edition = str_extract(Annees, \"(?i)depuis\\\\s+(\\\\d{4})\") |&gt; \n                         str_extract(\"\\\\d{4}\")\n    )\n  \n  data$Calcul_edition &lt;- as.integer(data$Calcul_edition)\n  \n  resultats &lt;- data |&gt; \n    mutate(\n      edition2 = (2024 - Calcul_edition) / 4 - ifelse(Calcul_edition &lt; 1916, 3, ifelse(Calcul_edition &lt; 1944, 2, 0))\n    )\n  \n  resultats_negatifs &lt;- resultats |&gt; \n    filter(edition2 - Editions &lt; 0)\n\n  return(resultats_negatifs)\n}\n\n\n  calcul_nb_editions_int(data_medailles_sport_ete)\n\n# A tibble: 13 × 12\n   Discipline       Annees      Editions Epreuves_2020    Or Argent Bronze Total\n   &lt;chr&gt;            &lt;chr&gt;          &lt;int&gt;         &lt;int&gt; &lt;int&gt;  &lt;int&gt;  &lt;int&gt; &lt;int&gt;\n 1 Lutte            1896,depui…       28            18   430    429    499  1358\n 2 Boxe             1904, 1908…       26            13   266    266    472  1004\n 3 Tir              1896, 1900…       27            15   288    289    287   864\n 4 Haltérophilie    1896, 1904…       26            14   229    225    229   683\n 5 Judo             1964,depui…       14            15   152    151    304   607\n 6 Voile            1900,depui…       27            10   195    185    180   560\n 7 Équitation       1900,depui…       26             6   151    149    148   448\n 8 Tennis           1896–1924,…       16             5    71     72     87   230\n 9 Tir à l'arc      1900-1912,…       17             5    70     69     61   200\n10 Hockey sur gazon 1908, 1920…       24             2    35     35     36   106\n11 Football         1900–1928,…       27             2    34     34     35   103\n12 Handball         1936,depui…       14             2    26     26     26    78\n13 Golf             1900–1904,…        4             2     8      8      9    19\n# ℹ 4 more variables: Athletes_medailles &lt;chr&gt;, Athletes_or &lt;chr&gt;,\n#   Calcul_edition &lt;int&gt;, edition2 &lt;dbl&gt;\n\n\nLa divergence entre les résultats de notre fonction et la colonne “éditions” pour 13 disciplines s’explique par le fait que certaines disciplines ont été réintroduites puis retirées des Jeux Olympiques en fonction des décisions du comité d’organisation.\n#Question 6 :\n\ncalcul_nb_editions_str &lt;- function(x) {\n  r &lt;- str_split(x, \",\", simplify = TRUE)\n  part &lt;- ifelse(!grepl(\"(?i)depuis|[-—–—]\", r[,]), \"1\", r[,])\n  return(part)\n}\n\n\ncalcul_nb_editions_int &lt;- function(part) {\n  depuis_years &lt;- str_extract_all(part, \"(?i)depuis\\\\s+(\\\\d{4})\") %&gt;%\n    unlist() %&gt;%\n    str_extract(\"\\\\d+\")\n  \n  Calcul_edition &lt;- as.integer(depuis_years)\n  result &lt;- (2024 - Calcul_edition) / 4 - ifelse(Calcul_edition &lt; 1916, 3, ifelse(Calcul_edition &lt; 1944, 2, 0))\n  \n  part2 &lt;- ifelse(grepl(\"(?i)depuis\\\\s+\\\\d{4}\", part), as.character(result), part)\n  \n  return(part2)\n}\n\n\ncalcul_final &lt;- function(part2) {\n  part2_numerique &lt;- as.numeric(part2)\n  resultat_final &lt;- sum(part2_numerique)\n  return(resultat_final)\n}\n\n\ncalcul_nb_editions &lt;- function(x) {\n  part1 &lt;- calcul_nb_editions_str(x)\n  part2 &lt;- calcul_nb_editions_int(part1)\n  resultat_final &lt;- calcul_final(part2)\n  return(resultat_final)\n}\n\n\nx1 &lt;- calcul_nb_editions_str(\"1896, 1904, depuis 1920\")\nx1\n\n[1] \"1\"            \"1\"            \" depuis 1920\"\n\nx2 &lt;- calcul_nb_editions_int(x1)\nx2\n\n[1] \"1\"  \"1\"  \"24\"\n\nx3 &lt;- calcul_final(x2)\nx3\n\n[1] 26\n\ncalcul_nb_editions(\"1896, 1904, depuis 1920\")\n\n[1] 26\n\n\n\ncalcul_nb_editions(\"1896, 1904, depuis 1920\")\n\n[1] 26\n\n\nIl est observé que notre fonction démontre son utilité pour les disciplines programmées de manière discontinue. Cependant, il convient de noter qu’il existe une troisième modalité non prise en considération dans notre fonction, à savoir les modalités de type “1900-1904”.\n#Question 7 :\n\ncalcul_nb_editions.character &lt;- function(part2) {\n  dates &lt;- str_match(part2, \"(\\\\d{4})\\\\s*[-—–]\\\\s*(\\\\d{4})\")\n  a &lt;- as.integer(dates[1, 2])\n  b &lt;- as.integer(dates[1, 3])\n  \n  x &lt;- ifelse(a &lt; 1915 & b &gt; 1917, 1, \n              ifelse(a &lt; 1915 & b &gt; 1945, 3, \n                     ifelse(1917 &lt; a & a &lt; 1939 & b &gt; 1945, 2, 0)))\n  \n  c_value &lt;- (b - a) / 4 + 1 - x\n  part3 &lt;- ifelse(grepl(\"(\\\\d{4})\\\\s*[-—–]\\\\s*(\\\\d{4})\", part2), as.character(c_value), part2)\n  return(part3)\n}\n\n\ncalcul_final2 &lt;- function(part3) {\n  part3_numerique &lt;- as.numeric(part3)\n  resultat_final &lt;- sum(part3_numerique)\n  return(resultat_final)\n}\n\n\ncalcul_nb_editions2 &lt;- function(x) {\n  part1 &lt;- calcul_nb_editions_str(x)\n  part2 &lt;- calcul_nb_editions_int(part1)\n  part3 &lt;- calcul_nb_editions.character(part2)\n  resultat_final &lt;- calcul_final2(part3)\n  \n  return(resultat_final)\n}\n\n\ncalcul_nb_editions2(\"2000\")\n\n[1] 1\n\n\nNotre fonction est efficace car elle identifie clairement que toute discipline ayant “2000” comme modalité dans notre colonne “Années” ne comporte qu’une seule édition.\n\ncalcul_nb_editions2(\"1904-1924, depuis 1948\")\n\n[1] 24\n\n\nNotre fonction est donc applicable à toutes les modalités de notre base de données.\n#Question 8 :\n\n  calcul_medailles_individuelles &lt;- function(data_frame) {\n    medailles_df &lt;- data.frame(\n      Athlete = gsub(\"\\\\s*\\\\(.*\\\\)\", \"\", data_frame$Athletes_medailles),\n      Pays = gsub(\".*\\\\((\\\\w+)\\\\)\", \"\\\\1\", data_frame$Athletes_medailles),\n      OR = as.integer(gsub(\".*\\\\((\\\\d+)-\\\\d+-\\\\d+\\\\)\", \"\\\\1\", data_frame$Athletes_medailles)),\n      ARGENT = as.integer(gsub(\".*\\\\(\\\\d+-(\\\\d+)-\\\\d+\\\\)\", \"\\\\1\", data_frame$Athletes_medailles)),\n      BRONZE = as.integer(gsub(\".*\\\\(\\\\d+-\\\\d+-(\\\\d+)\\\\)\", \"\\\\1\", data_frame$Athletes_medailles))\n    )\n    \n    medailles_df$TotalMedailles &lt;- medailles_df$OR + medailles_df$ARGENT + medailles_df$BRONZE\n    \n    classement_df &lt;- medailles_df[order(-medailles_df$TotalMedailles, -medailles_df$OR, -medailles_df$ARGENT, -medailles_df$BRONZE), ]\n    \n    meilleurs_athletes &lt;- head(classement_df$Athlete, 3)\n    \n    phrase &lt;- cat(\"Les 3 meilleurs athlètes sont:\\n\", paste(\"- \", meilleurs_athletes, collapse = \"\\n\"))\n    \n    return(phrase)\n  }\n\n#Question 9 :\n\ncalcul_medailles_individuelles(data_medailles_sport_ete)\n\nLes 3 meilleurs athlètes sont:\n -  Michael Phelps\n-  Larissa Latynina\n-  Edoardo Mangiarotti\n\n\nNULL\n\n\n#Question 10 :\n\nextraire_nationalite_athlete &lt;- function(data) {\n  medailles_df &lt;- data %&gt;%\n    mutate(\n      Prénom = str_extract(Athletes_medailles, \"^[A-Za-z]+\"),\n      Nom = str_extract(Athletes_medailles, \"(?&lt;= )[A-Za-z]+(?= \\\\()\"),\n      Pays = str_extract(Athletes_medailles, \"(?&lt;=\\\\()\\\\w+(?=\\\\))\"),\n      Or = as.numeric(str_extract(Athletes_medailles, \"(?&lt;=\\\\()\\\\d+(?=-)\")),\n      Argent = as.numeric(str_extract(Athletes_medailles, \"(?&lt;=-)[0-9]+(?=-)\")),\n      Bronze = as.numeric(str_extract(Athletes_medailles, \"(?&lt;=-)\\\\d+$\"))\n    )\n  pays_liste &lt;- unlist(lapply(strsplit(medailles_df$Pays, \"\\\\)\\\\s+\\\\(\"), function(x) x[length(x)]))\n  pays_frequence &lt;- table(pays_liste)\n  data_pays &lt;- as.data.frame(pays_frequence)\n  colnames(data_pays) &lt;- c(\"Pays\", \"Effectif\")\n  data_pays &lt;- data_pays[order(-data_pays$Effectif), ]\n  top3 &lt;- head(data_pays, 3)\n  phrase &lt;- cat(\"Les 3 pays qui posséde le plus de médailles sont:\\n\", paste(\"- \", top3$Pays, collapse = \"\\n\"))\n  return(top3)\n}\n\n\nprint(extraire_nationalite_athlete(data_medailles_sport_ete))\n\nLes 3 pays qui posséde le plus de médailles sont:\n -  USA\n-  GBR\n-  RUS   Pays Effectif\n17  USA        6\n6   GBR        3\n15  RUS        3\n\n\n#Question 11 :\nNous extrayons d’abord la base de données. Nous pouvons ensuite appliquer les mêmes réglages à la base de données des sports d’été, car la deuxième base de données contient exactement les mêmes informations que la première.\n\ndata_medailles_sport_hiver = list_tables[[2]]\ndata_medailles_sport_hiver = data_medailles_sport_hiver[-1,-1]\ncolnames(data_medailles_sport_hiver) =  c(\"Discipline\", \"Annees\", \"Editions\", \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\", \"Athletes_medailles\", \"Athletes_or\")\ndata_medailles_sport_ete[, 3:8] &lt;- lapply(data_medailles_sport_ete[, 3:8], as.integer)\nstr(data_medailles_sport_ete)\n\ntibble [30 × 10] (S3: tbl_df/tbl/data.frame)\n $ Discipline        : chr [1:30] \"Athlétisme\" \"Natation(hommes, femmes)\" \"Lutte\" \"Gymnastique(hommes, femmes)\" ...\n $ Annees            : chr [1:30] \"Depuis 1896\" \"Depuis 1896\" \"1896,depuis 1904\" \"Depuis 1896\" ...\n $ Editions          : int [1:30] 29 29 28 29 26 27 28 29 20 26 ...\n $ Epreuves_2020     : int [1:30] 48 37 18 18 13 15 14 22 16 14 ...\n $ Or                : int [1:30] 1028 607 430 380 266 288 269 263 242 229 ...\n $ Argent            : int [1:30] 1030 604 429 361 266 289 268 261 241 225 ...\n $ Bronze            : int [1:30] 1027 603 499 364 472 287 273 260 243 229 ...\n $ Total             : int [1:30] 3085 1814 1358 1105 1004 864 810 784 726 683 ...\n $ Athletes_medailles: chr [1:30] \"Paavo Nurmi (FIN) (9-3-0)\" \"Michael Phelps (USA) (23-3-2)\" \"Wilfried Dietrich (RFA) (1-2-2)\" \"Larissa Latynina (URS) (9-5-4)\" ...\n $ Athletes_or       : chr [1:30] \"Paavo Nurmi (FIN) (9-3-0) Carl Lewis (USA) (9-1-0)\" \"Michael Phelps (USA) (23-3-2)\" \"Kaori Ichō (JPN) (4-0-0) Mijaín López (CUB) (4-0-0)\" \"Larissa Latynina (URS) (9-5-4)\" ...\n\n\n\ncalcul_medailles_individuelles(data_medailles_sport_hiver)\n\nLes 3 meilleurs athlètes sont:\n -  Marit Bjørgen\n-  Ole Einar Bjørndalen\n-  Ireen Wüst\n\n\nNULL\n\n\n\nextraire_nationalite_athlete(data_medailles_sport_hiver)\n\nLes 3 pays qui posséde le plus de médailles sont:\n -  NOR\n-  CAN\n-  USA\n\n\n   Pays Effectif\n7   NOR        4\n2   CAN        2\n10  USA        2"
  },
  {
    "objectID": "posts/Exercice quarto/exercice 2/index copie 2.html#exercice-2",
    "href": "posts/Exercice quarto/exercice 2/index copie 2.html#exercice-2",
    "title": "Exercice antérieure",
    "section": "",
    "text": "library(rvest)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ ggplot2   3.5.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()         masks stats::filter()\n✖ readr::guess_encoding() masks rvest::guess_encoding()\n✖ dplyr::lag()            masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(stringr)\n\n#Question 1 :\n\nlist_tables &lt;-\n  session(\"https://fr.wikipedia.org/wiki/Liste_des_m%C3%A9daill%C3%A9s_olympiques\") |&gt;\n  html_elements(\".wikitable\") |&gt;\n  html_table()\nlist_tables\n\n[[1]]\n# A tibble: 31 × 11\n   Discipline   Discipline   Années `Nombre de` `Nombre de` `médailles décernés`\n   &lt;chr&gt;        &lt;chr&gt;        &lt;chr&gt;  &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;               \n 1 \"Discipline\" Discipline   Années Éditions    Épreuves(e… Or                  \n 2 \"\"           Athlétisme   Depui… 29          48          1028                \n 3 \"\"           Aviron       Depui… 28          14          269                 \n 4 \"\"           Badminton    Depui… 8           5           39                  \n 5 \"\"           Basket-ball  Depui… 20          4           32                  \n 6 \"\"           Boxe         1904,… 26          13          266                 \n 7 \"\"           Canoë-kayak  Depui… 20          16          242                 \n 8 \"\"           Cyclisme(ho… Depui… 29          22          263                 \n 9 \"\"           Équitation   1900,… 26          6           151                 \n10 \"\"           Escrime      Depui… 29          12          223                 \n# ℹ 21 more rows\n# ℹ 5 more variables: `médailles décernés` &lt;chr&gt;, `médailles décernés` &lt;chr&gt;,\n#   `médailles décernés` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles d'or` &lt;chr&gt;\n\n[[2]]\n# A tibble: 16 × 11\n   Discipline   Discipline   Années `Nombre de` `Nombre de` `médailles décernés`\n   &lt;chr&gt;        &lt;chr&gt;        &lt;chr&gt;  &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;               \n 1 \"Discipline\" Discipline   Années Éditions    épreuves e… Or                  \n 2 \"\"           Biathlon     1924,… 16          11          54                  \n 3 \"\"           Bobsleigh    1924-… 21          3           39                  \n 4 \"\"           Combiné nor… Depui… 22          3           28                  \n 5 \"\"           Curling      1924,… 4           2           7                   \n 6 \"\"           Hockey sur … Été :… 23          2           24                  \n 7 \"\"           Luge         Depui… 14          4           37                  \n 8 \"\"           Patinage ar… Été :… 24          4           77                  \n 9 \"\"           Patinage de… Depui… 22          12          152                 \n10 \"\"           Patinage de… Depui… 7           8           32                  \n11 \"\"           Saut à ski   Depui… 22          4           38                  \n12 \"\"           Skeleton     1924,… 6           2           6                   \n13 \"\"           Ski acrobat… Depui… 7           10          18                  \n14 \"\"           Ski alpin    Depui… 19          10          132                 \n15 \"\"           Ski de fond  Depui… 22          12          134                 \n16 \"\"           Snowboard    Depui… 5           10          14                  \n# ℹ 5 more variables: `médailles décernés` &lt;chr&gt;, `médailles décernés` &lt;chr&gt;,\n#   `médailles décernés` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles d'or` &lt;chr&gt;\n\n[[3]]\n# A tibble: 14 × 8\n   Discipline   Discipline       Années `Nombre d'éditions` `Médailles décernés`\n   &lt;chr&gt;        &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;               &lt;chr&gt;               \n 1 \"Discipline\" Discipline       Années Nombre d'éditions   Or                  \n 2 \"\"           Baseball         1992–… 5                   5                   \n 3 \"\"           Pelote basque    1900   1                   1                   \n 4 \"\"           Cricket          1900   1                   1                   \n 5 \"\"           Croquet          1900   1                   3                   \n 6 \"\"           Jeu de paume     1908   1                   1                   \n 7 \"\"           Crosse           1904–… 2                   2                   \n 8 \"\"           Polo             1900,… 5                   5                   \n 9 \"\"           Jeu de raquettes 1908   1                   2                   \n10 \"\"           Roque            1904   1                   1                   \n11 \"\"           Rugby à XV       1900,… 4                   4                   \n12 \"\"           Softball         1996–… 4                   4                   \n13 \"\"           Tir à la corde   1900–… 5                   5                   \n14 \"\"           Motonautisme     1908   5                   3                   \n# ℹ 3 more variables: `Médailles décernés` &lt;chr&gt;, `Médailles décernés` &lt;chr&gt;,\n#   `Médailles décernés` &lt;chr&gt;\n\n[[4]]\n# A tibble: 2 × 8\n  Discipline   Discipline        Années `Nombre d'éditions` `Médailles décernés`\n  &lt;chr&gt;        &lt;chr&gt;             &lt;chr&gt;  &lt;chr&gt;               &lt;chr&gt;               \n1 \"Discipline\" Discipline        Années Nombre d'éditions   Or                  \n2 \"\"           Patrouille milit… 1924   1                   1                   \n# ℹ 3 more variables: `Médailles décernés` &lt;chr&gt;, `Médailles décernés` &lt;chr&gt;,\n#   `Médailles décernés` &lt;chr&gt;\n\n[[5]]\n# A tibble: 30 × 11\n   Jeux  Médaille  Médaille Hôte     Nombred'épreuves(ave…¹ `Médailles décernés`\n   &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;                  &lt;chr&gt;               \n 1 Jeux  Médaille  Médaille Hôte     Nombred'épreuves(avec… Or                  \n 2 1896  médaillés tableau  Athènes… 43                     43                  \n 3 1900  médaillés tableau  Paris, … 95                     90                  \n 4 1904  médaillés tableau  Saint-L… 91                     96                  \n 5 1908  médaillés tableau  Londres… 110                    110                 \n 6 1912  médaillés tableau  Stockho… 102                    103                 \n 7 1920  médaillés tableau  Anvers,… 154                    156                 \n 8 1924  médaillés tableau  Paris, … 126                    126                 \n 9 1928  médaillés tableau  Amsterd… 109                    111                 \n10 1932  médaillés tableau  Los Ang… 117                    116                 \n# ℹ 20 more rows\n# ℹ abbreviated name: ¹​`Nombred'épreuves(avec médailles)`\n# ℹ 5 more variables: `Médailles décernés` &lt;chr&gt;, `Médailles décernés` &lt;chr&gt;,\n#   `Médailles décernés` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles d'or` &lt;chr&gt;\n\n[[6]]\n# A tibble: 24 × 11\n   Jeux  Médaille  Médaille Hôte     Nombred'épreuves(ave…¹ `Médailles décernés`\n   &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;                  &lt;chr&gt;               \n 1 Jeux  Médaille  Médaille Hôte     Nombred'épreuves(avec… Or                  \n 2 1924  médaillés tableau  Chamoni… 16                     16                  \n 3 1928  médaillés tableau  Saint-M… 14                     14                  \n 4 1932  médaillés tableau  Lake Pl… 14                     14                  \n 5 1936  médaillés tableau  Garmisc… 17                     17                  \n 6 1948  médaillés tableau  Saint-M… 22                     22                  \n 7 1952  médaillés tableau  Oslo, N… 22                     22                  \n 8 1956  médaillés tableau  Cortina… 24                     25                  \n 9 1960  médaillés tableau  Squaw V… 27                     28                  \n10 1964  médaillés tableau  Innsbru… 34                     34                  \n# ℹ 14 more rows\n# ℹ abbreviated name: ¹​`Nombred'épreuves(avec médailles)`\n# ℹ 5 more variables: `Médailles décernés` &lt;chr&gt;, `Médailles décernés` &lt;chr&gt;,\n#   `Médailles décernés` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` &lt;chr&gt;,\n#   `Athlète(s) avec le plus de médailles d'or` &lt;chr&gt;\n\n\nCette instruction nous permet d’effectuer du web scraping sur la page Wikipedia “Liste des médaillés olympiques” afin d’extraire les données présentes sous forme de tableaux. Les informations obtenues sont stockées dans la variable “list_tables”, qui est une liste contenant six éléments, chacun représentant l’un des tableaux présents sur la page.\n#Question 2 :\n\ndata_medailles_sport_ete = list_tables[[1]]\ndata_medailles_sport_ete = data_medailles_sport_ete[-1,-1]\ncolnames(data_medailles_sport_ete) =  c(\"Discipline\", \"Annees\", \"Editions\", \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\", \"Athletes_medailles\", \"Athletes_or\")\ndata_medailles_sport_ete[, 3:8] &lt;- lapply(data_medailles_sport_ete[, 3:8], as.integer)\nstr(data_medailles_sport_ete)\n\ntibble [30 × 10] (S3: tbl_df/tbl/data.frame)\n $ Discipline        : chr [1:30] \"Athlétisme\" \"Aviron\" \"Badminton\" \"Basket-ball\" ...\n $ Annees            : chr [1:30] \"Depuis 1896\" \"Depuis 1900\" \"Depuis 1992\" \"Depuis 1936\" ...\n $ Editions          : int [1:30] 29 28 8 20 26 20 29 26 29 27 ...\n $ Epreuves_2020     : int [1:30] 48 14 5 4 13 16 22 6 12 2 ...\n $ Or                : int [1:30] 1028 269 39 32 266 242 263 151 223 34 ...\n $ Argent            : int [1:30] 1030 268 39 32 266 241 261 149 223 34 ...\n $ Bronze            : int [1:30] 1027 273 43 32 472 243 260 148 221 35 ...\n $ Total             : int [1:30] 3085 810 121 96 1004 726 784 448 667 103 ...\n $ Athletes_medailles: chr [1:30] \"Paavo Nurmi (FIN) (9-3-0)\" \"Elisabeta Lipă (ROU) (5-2-1)\" \"Gao Ling (CHN) (2-1-1)\" \"Teresa Edwards (USA) (4-0-1)\" ...\n $ Athletes_or       : chr [1:30] \"Paavo Nurmi (FIN) (9-3-0) Carl Lewis (USA) (9-1-0)\" \"Elisabeta Lipă (ROU) (5-2-1) Georgeta Damian (ROU) (5-0-1) Steven Redgrave (GBR) (5-0-1)\" \"Gao Ling (CHN) (2-1-1) Kim Dong-moon (KOR) (2-0-1) Zhang Nan (CHN) (2-0-1) Ge Fei (CHN) (2-0-0) Gu Jun (CHN) (2\"| __truncated__ \"Teresa Edwards (USA) (4-0-1) Sue Bird (USA) (4-0-0) Tamika Catchings (USA) (4-0-0) Lisa Leslie (USA) (4-0-0) Di\"| __truncated__ ...\n\n\n#Question 3 :\n\ndata_medailles_sport_ete &lt;- data_medailles_sport_ete |&gt; \n  arrange(desc(Total))\ntop_3 &lt;- data_medailles_sport_ete[1:3, ]\n\nLes trois disciplines qui possédent le plus de médailles sont :\n\nfor (Discipline in top_3$Discipline) {\n  cat(\"- \", Discipline, \"\\n\")\n}\n\n-  Athlétisme \n-  Natation(hommes, femmes) \n-  Lutte \n\n\n#Question 4 :\n\nselected_rows &lt;- data_medailles_sport_ete %&gt;%\n  filter(Epreuves_2020 == min(Epreuves_2020))\nselected_rows$Discipline\n\n[1] \"Pentathlon moderne\"    \"Hockey sur gazon\"      \"Football\"             \n[4] \"Volley-ball\"           \"Water polo\"            \"Handball\"             \n[7] \"Natation synchronisée\" \"Golf\"                 \n\n\n#Question 5 :\nPour valider les résultats de la colonne “éditions”, nous utilisons une fonction spécifique.\n\ncalcul_edition &lt;- function(annee) {\n  Calcul_edition &lt;- str_extract(annee, \"(?i)depuis\\\\s+(\\\\d{4})\") |&gt; \n    str_extract(\"\\\\d{4}\") |&gt; \n    as.integer()\n  \n  if (Calcul_edition &lt; 1896 || (Calcul_edition - 1896) %% 4 != 0) {\n    stop(\"Année invalide. L'année doit être 1896 ou ultérieure et un multiple de 4 après 1896.\")\n  }\n  \n  edition2 &lt;- (2024 - Calcul_edition) / 4 - ifelse(Calcul_edition &lt; 1916, 3, ifelse(Calcul_edition &lt; 1944, 2, 0))\n  \n  return(edition2)\n}\n\n\ncalcul_edition(\"depuis 1900\")\n\n[1] 28\n\n\nCependant, nous employons une autre méthode pour vérifier dans la base de données.\n\ncalcul_nb_editions_int &lt;- function(data) {\n  data &lt;- data |&gt; \n    mutate(\n      Calcul_edition = str_extract(Annees, \"(?i)depuis\\\\s+(\\\\d{4})\") |&gt; \n                         str_extract(\"\\\\d{4}\")\n    )\n  \n  data$Calcul_edition &lt;- as.integer(data$Calcul_edition)\n  \n  resultats &lt;- data |&gt; \n    mutate(\n      edition2 = (2024 - Calcul_edition) / 4 - ifelse(Calcul_edition &lt; 1916, 3, ifelse(Calcul_edition &lt; 1944, 2, 0))\n    )\n  \n  resultats_negatifs &lt;- resultats |&gt; \n    filter(edition2 - Editions &lt; 0)\n\n  return(resultats_negatifs)\n}\n\n\n  calcul_nb_editions_int(data_medailles_sport_ete)\n\n# A tibble: 13 × 12\n   Discipline       Annees      Editions Epreuves_2020    Or Argent Bronze Total\n   &lt;chr&gt;            &lt;chr&gt;          &lt;int&gt;         &lt;int&gt; &lt;int&gt;  &lt;int&gt;  &lt;int&gt; &lt;int&gt;\n 1 Lutte            1896,depui…       28            18   430    429    499  1358\n 2 Boxe             1904, 1908…       26            13   266    266    472  1004\n 3 Tir              1896, 1900…       27            15   288    289    287   864\n 4 Haltérophilie    1896, 1904…       26            14   229    225    229   683\n 5 Judo             1964,depui…       14            15   152    151    304   607\n 6 Voile            1900,depui…       27            10   195    185    180   560\n 7 Équitation       1900,depui…       26             6   151    149    148   448\n 8 Tennis           1896–1924,…       16             5    71     72     87   230\n 9 Tir à l'arc      1900-1912,…       17             5    70     69     61   200\n10 Hockey sur gazon 1908, 1920…       24             2    35     35     36   106\n11 Football         1900–1928,…       27             2    34     34     35   103\n12 Handball         1936,depui…       14             2    26     26     26    78\n13 Golf             1900–1904,…        4             2     8      8      9    19\n# ℹ 4 more variables: Athletes_medailles &lt;chr&gt;, Athletes_or &lt;chr&gt;,\n#   Calcul_edition &lt;int&gt;, edition2 &lt;dbl&gt;\n\n\nLa divergence entre les résultats de notre fonction et la colonne “éditions” pour 13 disciplines s’explique par le fait que certaines disciplines ont été réintroduites puis retirées des Jeux Olympiques en fonction des décisions du comité d’organisation.\n#Question 6 :\n\ncalcul_nb_editions_str &lt;- function(x) {\n  r &lt;- str_split(x, \",\", simplify = TRUE)\n  part &lt;- ifelse(!grepl(\"(?i)depuis|[-—–—]\", r[,]), \"1\", r[,])\n  return(part)\n}\n\n\ncalcul_nb_editions_int &lt;- function(part) {\n  depuis_years &lt;- str_extract_all(part, \"(?i)depuis\\\\s+(\\\\d{4})\") %&gt;%\n    unlist() %&gt;%\n    str_extract(\"\\\\d+\")\n  \n  Calcul_edition &lt;- as.integer(depuis_years)\n  result &lt;- (2024 - Calcul_edition) / 4 - ifelse(Calcul_edition &lt; 1916, 3, ifelse(Calcul_edition &lt; 1944, 2, 0))\n  \n  part2 &lt;- ifelse(grepl(\"(?i)depuis\\\\s+\\\\d{4}\", part), as.character(result), part)\n  \n  return(part2)\n}\n\n\ncalcul_final &lt;- function(part2) {\n  part2_numerique &lt;- as.numeric(part2)\n  resultat_final &lt;- sum(part2_numerique)\n  return(resultat_final)\n}\n\n\ncalcul_nb_editions &lt;- function(x) {\n  part1 &lt;- calcul_nb_editions_str(x)\n  part2 &lt;- calcul_nb_editions_int(part1)\n  resultat_final &lt;- calcul_final(part2)\n  return(resultat_final)\n}\n\n\nx1 &lt;- calcul_nb_editions_str(\"1896, 1904, depuis 1920\")\nx1\n\n[1] \"1\"            \"1\"            \" depuis 1920\"\n\nx2 &lt;- calcul_nb_editions_int(x1)\nx2\n\n[1] \"1\"  \"1\"  \"24\"\n\nx3 &lt;- calcul_final(x2)\nx3\n\n[1] 26\n\ncalcul_nb_editions(\"1896, 1904, depuis 1920\")\n\n[1] 26\n\n\n\ncalcul_nb_editions(\"1896, 1904, depuis 1920\")\n\n[1] 26\n\n\nIl est observé que notre fonction démontre son utilité pour les disciplines programmées de manière discontinue. Cependant, il convient de noter qu’il existe une troisième modalité non prise en considération dans notre fonction, à savoir les modalités de type “1900-1904”.\n#Question 7 :\n\ncalcul_nb_editions.character &lt;- function(part2) {\n  dates &lt;- str_match(part2, \"(\\\\d{4})\\\\s*[-—–]\\\\s*(\\\\d{4})\")\n  a &lt;- as.integer(dates[1, 2])\n  b &lt;- as.integer(dates[1, 3])\n  \n  x &lt;- ifelse(a &lt; 1915 & b &gt; 1917, 1, \n              ifelse(a &lt; 1915 & b &gt; 1945, 3, \n                     ifelse(1917 &lt; a & a &lt; 1939 & b &gt; 1945, 2, 0)))\n  \n  c_value &lt;- (b - a) / 4 + 1 - x\n  part3 &lt;- ifelse(grepl(\"(\\\\d{4})\\\\s*[-—–]\\\\s*(\\\\d{4})\", part2), as.character(c_value), part2)\n  return(part3)\n}\n\n\ncalcul_final2 &lt;- function(part3) {\n  part3_numerique &lt;- as.numeric(part3)\n  resultat_final &lt;- sum(part3_numerique)\n  return(resultat_final)\n}\n\n\ncalcul_nb_editions2 &lt;- function(x) {\n  part1 &lt;- calcul_nb_editions_str(x)\n  part2 &lt;- calcul_nb_editions_int(part1)\n  part3 &lt;- calcul_nb_editions.character(part2)\n  resultat_final &lt;- calcul_final2(part3)\n  \n  return(resultat_final)\n}\n\n\ncalcul_nb_editions2(\"2000\")\n\n[1] 1\n\n\nNotre fonction est efficace car elle identifie clairement que toute discipline ayant “2000” comme modalité dans notre colonne “Années” ne comporte qu’une seule édition.\n\ncalcul_nb_editions2(\"1904-1924, depuis 1948\")\n\n[1] 24\n\n\nNotre fonction est donc applicable à toutes les modalités de notre base de données.\n#Question 8 :\n\n  calcul_medailles_individuelles &lt;- function(data_frame) {\n    medailles_df &lt;- data.frame(\n      Athlete = gsub(\"\\\\s*\\\\(.*\\\\)\", \"\", data_frame$Athletes_medailles),\n      Pays = gsub(\".*\\\\((\\\\w+)\\\\)\", \"\\\\1\", data_frame$Athletes_medailles),\n      OR = as.integer(gsub(\".*\\\\((\\\\d+)-\\\\d+-\\\\d+\\\\)\", \"\\\\1\", data_frame$Athletes_medailles)),\n      ARGENT = as.integer(gsub(\".*\\\\(\\\\d+-(\\\\d+)-\\\\d+\\\\)\", \"\\\\1\", data_frame$Athletes_medailles)),\n      BRONZE = as.integer(gsub(\".*\\\\(\\\\d+-\\\\d+-(\\\\d+)\\\\)\", \"\\\\1\", data_frame$Athletes_medailles))\n    )\n    \n    medailles_df$TotalMedailles &lt;- medailles_df$OR + medailles_df$ARGENT + medailles_df$BRONZE\n    \n    classement_df &lt;- medailles_df[order(-medailles_df$TotalMedailles, -medailles_df$OR, -medailles_df$ARGENT, -medailles_df$BRONZE), ]\n    \n    meilleurs_athletes &lt;- head(classement_df$Athlete, 3)\n    \n    phrase &lt;- cat(\"Les 3 meilleurs athlètes sont:\\n\", paste(\"- \", meilleurs_athletes, collapse = \"\\n\"))\n    \n    return(phrase)\n  }\n\n#Question 9 :\n\ncalcul_medailles_individuelles(data_medailles_sport_ete)\n\nLes 3 meilleurs athlètes sont:\n -  Michael Phelps\n-  Larissa Latynina\n-  Edoardo Mangiarotti\n\n\nNULL\n\n\n#Question 10 :\n\nextraire_nationalite_athlete &lt;- function(data) {\n  medailles_df &lt;- data %&gt;%\n    mutate(\n      Prénom = str_extract(Athletes_medailles, \"^[A-Za-z]+\"),\n      Nom = str_extract(Athletes_medailles, \"(?&lt;= )[A-Za-z]+(?= \\\\()\"),\n      Pays = str_extract(Athletes_medailles, \"(?&lt;=\\\\()\\\\w+(?=\\\\))\"),\n      Or = as.numeric(str_extract(Athletes_medailles, \"(?&lt;=\\\\()\\\\d+(?=-)\")),\n      Argent = as.numeric(str_extract(Athletes_medailles, \"(?&lt;=-)[0-9]+(?=-)\")),\n      Bronze = as.numeric(str_extract(Athletes_medailles, \"(?&lt;=-)\\\\d+$\"))\n    )\n  pays_liste &lt;- unlist(lapply(strsplit(medailles_df$Pays, \"\\\\)\\\\s+\\\\(\"), function(x) x[length(x)]))\n  pays_frequence &lt;- table(pays_liste)\n  data_pays &lt;- as.data.frame(pays_frequence)\n  colnames(data_pays) &lt;- c(\"Pays\", \"Effectif\")\n  data_pays &lt;- data_pays[order(-data_pays$Effectif), ]\n  top3 &lt;- head(data_pays, 3)\n  phrase &lt;- cat(\"Les 3 pays qui posséde le plus de médailles sont:\\n\", paste(\"- \", top3$Pays, collapse = \"\\n\"))\n  return(top3)\n}\n\n\nprint(extraire_nationalite_athlete(data_medailles_sport_ete))\n\nLes 3 pays qui posséde le plus de médailles sont:\n -  USA\n-  GBR\n-  RUS   Pays Effectif\n17  USA        6\n6   GBR        3\n15  RUS        3\n\n\n#Question 11 :\nNous extrayons d’abord la base de données. Nous pouvons ensuite appliquer les mêmes réglages à la base de données des sports d’été, car la deuxième base de données contient exactement les mêmes informations que la première.\n\ndata_medailles_sport_hiver = list_tables[[2]]\ndata_medailles_sport_hiver = data_medailles_sport_hiver[-1,-1]\ncolnames(data_medailles_sport_hiver) =  c(\"Discipline\", \"Annees\", \"Editions\", \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\", \"Athletes_medailles\", \"Athletes_or\")\ndata_medailles_sport_ete[, 3:8] &lt;- lapply(data_medailles_sport_ete[, 3:8], as.integer)\nstr(data_medailles_sport_ete)\n\ntibble [30 × 10] (S3: tbl_df/tbl/data.frame)\n $ Discipline        : chr [1:30] \"Athlétisme\" \"Natation(hommes, femmes)\" \"Lutte\" \"Gymnastique(hommes, femmes)\" ...\n $ Annees            : chr [1:30] \"Depuis 1896\" \"Depuis 1896\" \"1896,depuis 1904\" \"Depuis 1896\" ...\n $ Editions          : int [1:30] 29 29 28 29 26 27 28 29 20 26 ...\n $ Epreuves_2020     : int [1:30] 48 37 18 18 13 15 14 22 16 14 ...\n $ Or                : int [1:30] 1028 607 430 380 266 288 269 263 242 229 ...\n $ Argent            : int [1:30] 1030 604 429 361 266 289 268 261 241 225 ...\n $ Bronze            : int [1:30] 1027 603 499 364 472 287 273 260 243 229 ...\n $ Total             : int [1:30] 3085 1814 1358 1105 1004 864 810 784 726 683 ...\n $ Athletes_medailles: chr [1:30] \"Paavo Nurmi (FIN) (9-3-0)\" \"Michael Phelps (USA) (23-3-2)\" \"Wilfried Dietrich (RFA) (1-2-2)\" \"Larissa Latynina (URS) (9-5-4)\" ...\n $ Athletes_or       : chr [1:30] \"Paavo Nurmi (FIN) (9-3-0) Carl Lewis (USA) (9-1-0)\" \"Michael Phelps (USA) (23-3-2)\" \"Kaori Ichō (JPN) (4-0-0) Mijaín López (CUB) (4-0-0)\" \"Larissa Latynina (URS) (9-5-4)\" ...\n\n\n\ncalcul_medailles_individuelles(data_medailles_sport_hiver)\n\nLes 3 meilleurs athlètes sont:\n -  Marit Bjørgen\n-  Ole Einar Bjørndalen\n-  Ireen Wüst\n\n\nNULL\n\n\n\nextraire_nationalite_athlete(data_medailles_sport_hiver)\n\nLes 3 pays qui posséde le plus de médailles sont:\n -  NOR\n-  CAN\n-  USA\n\n\n   Pays Effectif\n7   NOR        4\n2   CAN        2\n10  USA        2"
  },
  {
    "objectID": "posts/Exercice quarto/exercice 4/index copie 3.html",
    "href": "posts/Exercice quarto/exercice 4/index copie 3.html",
    "title": "Exercice antérieure",
    "section": "",
    "text": "library(geosphere)\nlibrary(tidygeocoder)\nlibrary(leaflet)\n\n##Question 1 :\n##Question 2 :\n\ndata_ex = read.csv2(\"/Users/rododo/Desktop/ECAP/R avancé/paris-2024-sites-olympiques-et-paralympiques-franciliens.csv\")\ndata_ex = data.frame(data_ex)\n\n\nnames(data_ex)\n\n[1] \"geo_point\"                      \"nom\"                           \n[3] \"sites_olympiques_paralympiques\" \"sports\"                        \n\nstr(data_ex)\n\n'data.frame':   31 obs. of  4 variables:\n $ geo_point                     : chr  \"48.841319, 2.253076\" \"48.924388, 2.359871\" \"48.92467, 2.332428\" \"48.815115, 2.08208\" ...\n $ nom                           : chr  \"Parc des Princes\" \"Stade de France\" \"Village olympique\" \"Château de Versailles\" ...\n $ sites_olympiques_paralympiques: chr  \"Site olympique\" \"Site olympique,Site paralympique\" \"\" \"Site olympique,Site paralympique\" ...\n $ sports                        : chr  \"Football\" \"Athlétisme,Para athlétisme,Rugby\" \"\" \"Sports équestres,Para équitation,Pentathlon moderne\" ...\n\n\nIl est possible de constater la présenvce de quatres colonnes désignées par les noms “geo_point”, “nom”, “sites_olympiques_paralympiques”, et “sport”. En outre, la première colonne renferme les coordonnées géographiques des sites (latitude, longitude), la seconde contient les noms des lieux, la troisième spécifie si le lieu accueille des épreuves olympiques, paralympiques, ou les deux, tandis que la dernière colonne correspond au sport pratiqué sur le site.\n\ndim(data_ex)\n\n[1] 31  4\n\n\nNous pouvons voir que le data frame contient 31 lignes.\n##Question 3 :\n\nphrases_a_rechercher &lt;- c(\"Site olympique\")\nresultat_olymp &lt;- data_ex[grep(paste(phrases_a_rechercher, collapse=\"|\"), data_ex$sites_olympiques_paralympiques), ]\nprint(nrow(resultat_olymp))\n\n[1] 26\n\nprint(table(resultat_olymp$sites_olympiques_paralympiques))\n\n\n                  Site olympique Site olympique,Site paralympique \n                              10                               16 \n\n\nIl est notable qu’il existe précisément 26 sites olympiques, dont 16 sont également désignés comme sites paralympiques.\n##Question 4 :\n\nphrases_a_rechercher &lt;- c(\"Site paralympique\")\nresultat_para &lt;- data_ex[grep(paste(phrases_a_rechercher, collapse=\"|\"), data_ex$sites_olympiques_paralympiques), ]\nprint(nrow(resultat_para))\n\n[1] 19\n\nprint(table(resultat_para$sites_olympiques_paralympiques))\n\n\nSite olympique,Site paralympique                Site paralympique \n                              16                                3 \n\n\nIl est observé qu’il existe précisément 19 sites paralympiques, parmi lesquels 16 sont simultanément désignés comme sites olympiques.\n##Question 5 :\n\nresultat_sport &lt;- data_ex[grep(\",\", data_ex$sports), ]\nprint(nrow(resultat_sport))\n\n[1] 19\n\n\nAu sein de l’ensemble des sites, on constate la présence de 19 installations qui accueillent diverses disciplines sportives. Ces 19 sites comprennent :\n\nfor (nom in resultat_sport$nom) {\n  cat(\"- \", nom, \"\\n\")\n}\n\n-  Stade de France \n-  Château de Versailles \n-  Grand Palais \n-  Invalides \n-  Pont d'Iéna \n-  Arena Bercy \n-  Arena Paris nord \n-  Arena Paris Sud 6 (Porte de Versailles) \n-  Stade de la Concorde \n-  Arena Champs de Mars \n-  Stade Tour Eiffel \n-  Arena La Chapelle \n-  Centre aquatique \n-  Arena Paris Sud 1 (Porte de Versailles) \n-  Arena Paris Sud 4 (Porte de Versailles) \n-  La Défense Arena \n-  Stade nautique \n-  Vélodrome National de Saint-Quentin-en-Yvelines \n-  Stade Roland Garros \n\n\n##Question 6 :\n\nphrases_a_rechercher &lt;- c(\"Site paralympique\")\nresultat_para_filtre &lt;- resultat_sport[grep(paste(phrases_a_rechercher, collapse=\"|\"), resultat_sport$sites_olympiques_paralympiques), ]\nprint(table(resultat_para_filtre$sites_olympiques_paralympiques))\n\n\nSite olympique,Site paralympique \n                              16 \n\n\nIl est à noter que seize sites, dédiés à plusieurs disciplines sportives, accueillent également au moins une discipline sportive paralympique.\n##Question 7 :\n\ndata_ex$nb_virgules &lt;- sapply(strsplit(as.character(data_ex$sports), \",\"), function(x) length(x) - 1)\nmax_virgules &lt;- max(data_ex$nb_virgules)\nlignes_max_virgules &lt;- data_ex[data_ex$nb_virgules == max_virgules, ]\nprint(max_virgules)\n\n[1] 3\n\nprint(nrow(lignes_max_virgules))\n\n[1] 8\n\n\nNous observons la présence de huit sites, chacun proposant un accueil sportif pour trois disciplines, ce nombre représentant le maximum pour les Jeux Olympiques de Paris. Ces sites étant :\n\nfor (nom in lignes_max_virgules$nom) {\n  cat(\"- \", nom, \"\\n\")\n}\n\n-  Grand Palais \n-  Invalides \n-  Arena Bercy \n-  Arena Paris nord \n-  Stade de la Concorde \n-  Arena Champs de Mars \n-  Arena La Chapelle \n-  Stade nautique \n\n\n##Question 8 :\n\ndata_ex$nb_sports &lt;- strsplit (as.character(data_ex$sports), \",\")\n\n\ndisciplines &lt;- unique(unlist(data_ex$nb_sports))\nsites_disciplines &lt;- numeric(length = length(disciplines))\n\nfor (i in seq_along(disciplines)) {\n  sites_disciplines[i] &lt;- sum(sapply(data_ex$nb_sports, function(x) disciplines[i] %in% x))\n}\n\nmax_discipline_sites &lt;- disciplines[which.max(sites_disciplines)]\nmax_sites_discipline &lt;- data_ex[sapply(data_ex$nb_sports, function(x) max_discipline_sites %in% x),]\n\n\ncat(\"La discipline\", max_discipline_sites, \"sera celle qui se déroulera sur le plus grand nombre de sites.\", \"\\n\")\n\nLa discipline Athlétisme sera celle qui se déroulera sur le plus grand nombre de sites. \n\ncat(\"Les sites associés à cette discipline sont :\\n\",\n    paste(\"- \", max_sites_discipline$nom, collapse = \"\\n\"), \"\\n\")\n\nLes sites associés à cette discipline sont :\n -  Stade de France\n-  Invalides\n-  Pont d'Iéna\n-  Hôtel de ville de Paris \n\n\n##Question 9 :\nSéparation de la colonnes géo_point en 2 afin d’avoir les latitudes et longitudes séparer.\n\ngeo_coords &lt;- strsplit(as.character(data_ex$geo_point), \",\")\ndata_ex$geo_lat &lt;- as.numeric(sapply(geo_coords, function(x) x[1]))\ndata_ex$geo_lon &lt;- as.numeric(sapply(geo_coords, function(x) x[2]))\ndata_ex$geo_point &lt;- NULL\n\nPar conséquent, nous identifions les sites les plus proches à vol d’oiseau.\n\nhaversine_distance &lt;- function(lat1, lon1, lat2, lon2) {\n  distm(c(lon1, lat1), c(lon2, lat2), fun = distHaversine)\n}\nmin_distance &lt;- Inf\nnom_site1 &lt;- ''\nnom_site2 &lt;- ''\nfor (i in 1:(nrow(data_ex) - 1)) {\n  for (j in (i + 1):nrow(data_ex)) {\n    distance &lt;- haversine_distance(data_ex$geo_lat[i], data_ex$geo_lon[i], data_ex$geo_lat[j], data_ex$geo_lon[j])\n        if (distance &lt; min_distance) {\n      min_distance &lt;- distance\n      nom_site1 &lt;- data_ex$nom[i]\n      nom_site2 &lt;- data_ex$nom[j]\n    }\n  }\n}\n\n\ncat(\"Les deux sites les plus proches sont :\", nom_site1, \"et\", nom_site2, \"\\n\")\n\nLes deux sites les plus proches sont : Stade BMX de Saint-Quentin-en-Yvelines et Vélodrome National de Saint-Quentin-en-Yvelines \n\n\n\n\nNous identifions les sites les plus éloignés à vol d’oiseau.\n\nhaversine_distance &lt;- function(lat1, lon1, lat2, lon2) {\n  distm(c(lon1, lat1), c(lon2, lat2), fun = distHaversine)\n}\nmax_distance &lt;- 0\nnom_site1 &lt;- ''\nnom_site2 &lt;- ''\nfor (i in 1:(nrow(data_ex) - 1)) {\n  for (j in (i + 1):nrow(data_ex)) {\n    distance &lt;- haversine_distance(data_ex$geo_lat[i], data_ex$geo_lon[i], data_ex$geo_lat[j], data_ex$geo_lon[j])\n        if (distance &gt; max_distance) {\n      max_distance &lt;- distance\n      nom_site1 &lt;- data_ex$nom[i]\n      nom_site2 &lt;- data_ex$nom[j]\n    }\n  }\n}\n\n\ncat(\"Les deux sites les plus loins sont :\", nom_site1, \"et\", nom_site2, \"\\n\")\n\nLes deux sites les plus loins sont : Colline d'Elancourt et Stade nautique \n\n\n\n\n\n\nbarycentre_lat &lt;- sum(data_ex$geo_lat) / nrow(data_ex)\nbarycentre_lon &lt;- sum(data_ex$geo_lon) / nrow(data_ex)\ncat(\"Les coordonnées du barycentre sont : (\", barycentre_lat, \",\", barycentre_lon, \")\\n\")\n\nLes coordonnées du barycentre sont : ( 48.86684 , 2.29757 )\n\n\n\ncoords &lt;- data.frame(lat = barycentre_lat, lon = barycentre_lon)\nresult &lt;- tidygeocoder::reverse_geocode(coords, lat = \"lat\", lon = \"lon\", method = \"osm\")\n\nPassing 1 coordinate to the Nominatim single coordinate geocoder\n\n\nQuery completed in: 1 seconds\n\ncat(\"L'adresse correspondant aux coordonnées (\", coords$lat, \",\", coords$lon, \") est :\\n\", result$address, \"\\n\")\n\nL'adresse correspondant aux coordonnées ( 48.86684 , 2.29757 ) est :\n 23, Avenue Pierre 1er de Serbie, Quartier de Chaillot, Paris 16e Arrondissement, Paris, Île-de-France, France métropolitaine, 75116, France \n\n\nNous pouvons visualiser l’emplacement grâce à une carte :\n\nma_carte &lt;- leaflet() %&gt;%\n  addTiles() %&gt;%\n  addMarkers(lng = barycentre_lon, lat = barycentre_lat, popup = \"Barycentre\")\nma_carte"
  },
  {
    "objectID": "posts/Exercice quarto/exercice 4/index copie 3.html#question-10",
    "href": "posts/Exercice quarto/exercice 4/index copie 3.html#question-10",
    "title": "Exercice antérieure",
    "section": "",
    "text": "Nous identifions les sites les plus éloignés à vol d’oiseau.\n\nhaversine_distance &lt;- function(lat1, lon1, lat2, lon2) {\n  distm(c(lon1, lat1), c(lon2, lat2), fun = distHaversine)\n}\nmax_distance &lt;- 0\nnom_site1 &lt;- ''\nnom_site2 &lt;- ''\nfor (i in 1:(nrow(data_ex) - 1)) {\n  for (j in (i + 1):nrow(data_ex)) {\n    distance &lt;- haversine_distance(data_ex$geo_lat[i], data_ex$geo_lon[i], data_ex$geo_lat[j], data_ex$geo_lon[j])\n        if (distance &gt; max_distance) {\n      max_distance &lt;- distance\n      nom_site1 &lt;- data_ex$nom[i]\n      nom_site2 &lt;- data_ex$nom[j]\n    }\n  }\n}\n\n\ncat(\"Les deux sites les plus loins sont :\", nom_site1, \"et\", nom_site2, \"\\n\")\n\nLes deux sites les plus loins sont : Colline d'Elancourt et Stade nautique"
  },
  {
    "objectID": "posts/Exercice quarto/exercice 4/index copie 3.html#question-11",
    "href": "posts/Exercice quarto/exercice 4/index copie 3.html#question-11",
    "title": "Exercice antérieure",
    "section": "",
    "text": "barycentre_lat &lt;- sum(data_ex$geo_lat) / nrow(data_ex)\nbarycentre_lon &lt;- sum(data_ex$geo_lon) / nrow(data_ex)\ncat(\"Les coordonnées du barycentre sont : (\", barycentre_lat, \",\", barycentre_lon, \")\\n\")\n\nLes coordonnées du barycentre sont : ( 48.86684 , 2.29757 )\n\n\n\ncoords &lt;- data.frame(lat = barycentre_lat, lon = barycentre_lon)\nresult &lt;- tidygeocoder::reverse_geocode(coords, lat = \"lat\", lon = \"lon\", method = \"osm\")\n\nPassing 1 coordinate to the Nominatim single coordinate geocoder\n\n\nQuery completed in: 1 seconds\n\ncat(\"L'adresse correspondant aux coordonnées (\", coords$lat, \",\", coords$lon, \") est :\\n\", result$address, \"\\n\")\n\nL'adresse correspondant aux coordonnées ( 48.86684 , 2.29757 ) est :\n 23, Avenue Pierre 1er de Serbie, Quartier de Chaillot, Paris 16e Arrondissement, Paris, Île-de-France, France métropolitaine, 75116, France \n\n\nNous pouvons visualiser l’emplacement grâce à une carte :\n\nma_carte &lt;- leaflet() %&gt;%\n  addTiles() %&gt;%\n  addMarkers(lng = barycentre_lon, lat = barycentre_lat, popup = \"Barycentre\")\nma_carte"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bienvenue sur Mon Blog",
    "section": "",
    "text": "Bienvenue sur Mon Blog\nVoici les étapes qui m’ont permis de créer mon blog.\n\n\nCréation du projet de sites sous github\n\n\nLa mise en place du packages sous github\n\n\nLe post de blog.\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\nVisualisation météorologique\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 5, 2024\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nExercice 1\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 2, 2024\n\n\nRodolphe MOCAER\n\n\n\n\n\n\n  \n\n\n\n\nExercice 2\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 2, 2024\n\n\nRodolphe MOCAER\n\n\n\n\n\n\n  \n\n\n\n\nExercice 3\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 2, 2024\n\n\nRodolphe MOCAER\n\n\n\n\n\n\n  \n\n\n\n\nExercice 4\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 2, 2024\n\n\nRodolphe MOCAER\n\n\n\n\n\n\n  \n\n\n\n\nBienvenue sur mon Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 2, 2024\n\n\nRodolphe MOCAER\n\n\n\n\n\n\nNo matching items"
  }
]